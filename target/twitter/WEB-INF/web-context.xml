<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:component-scan base-package="com.twitter.controller"/>
    <mvc:annotation-driven/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp" />
    </bean>
    <context:property-placeholder location="classpath:application.properties" ignore-unresolvable="false"/>

    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" name="ds">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/tweeter" />
        <property name="username" value="root1"/>
        <property name="password" value="root1"/>
     </bean>

    <bean id="AuthenticationService" class="com.twitter.service.AuthenticationService">
<!--        <constructor-arg ref=""/>-->
    </bean>
    <bean id="UserDao" class="com.twitter.dao.UserDao">
<!--        <constructor-arg ref=""/>-->
    </bean>
    <bean id="FollowerService" class="com.twitter.service.FollowerService">
<!--        <constructor-arg ref=""/>-->
    </bean>
    <bean id="FollowerMappingDao" class="com.twitter.dao.FollowerMappingDao">
<!--        <constructor-arg ref=""/>-->
    </bean>

    <bean id="TweetService" class="com.twitter.service.TweetService">
    </bean>
    <bean id="TweetDao" class="com.twitter.dao.TweetDao">
    </bean>



    <bean class="org.springframework.jdbc.core.JdbcTemplate" name="jdbcTemplate">
        <property name="dataSource">
            <ref bean="ds"/>
        </property>
    </bean>

</beans>